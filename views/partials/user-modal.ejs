<div class="modal-wrapper" id="add-user-modal">
    <div class="modal">
        <a href="#" onclick="closeModal()" class="modal-close">+</a>
        <div class="modal-title">
            <h2>Create New User</h2>
        </div>
        <div class="modal-body">
            <form id="add-user-form" action="/users" method="POST" enctype="multipart/form-data">
                <input type="text" placeholder="enter name" name="name" />
                <p class="error name-error">This is error</p>

                <input type="text" placeholder="enter email" name="email" />
                <p class="error email-error">This is error</p>

                <input type="text" placeholder="enter mobile" name="mobile" />
                <p class="error mobile-error">This is error</p>

                <input type="password" placeholder="enter password" name="password" />
                <p class="error password-error">This is error</p>

                <input type="file" name="avatar" />
                <p class="error avatar-error">This is error</p>

                <p class="error common-error">This is error</p>


                <input type="submit" value="Submit" />
            </form>
        </div>
    </div>
</div>
<script>
    const modal = document.querySelector("#add-user-modal");
    const form = document.getElementById("add-user-form");

    // success toast 
    const successToast = Toastify({
        text: "User was added successfully.!",
        duration: 1000
    })

    function closeModal() {
        modal.style.display = "none";
    }

    function openModal() {
        modal.style.display = "block";
    }

    // form submit
    form.onsubmit = async(event) => {
        event.preventDefault();

        const errorPlaceholders = document.querySelectorAll("p.error");
        for (let i = 0; i < errorPlaceholders.length; i++) {
            errorPlaceholders[i].style.display = "none";
        }

        const inputError = document.querySelectorAll("input.error");
        if (inputError.length > 0) {
            for (let j = 0; j < inputError.length; j++) {
                inputError[j].classList.remove('error');
            }
        }

        // form data 
        const formData = new FormData(form);

        // send and response server 
        let response = await fetch('/users', {
            method: 'POST',
            body: formData
        });

        // get response 
        let result = await response.json();

        // error handler 
        if (result.errors) {
            Object.keys(result.errors).forEach(fieldName => {
                // make err visible to UI
                form[fieldName].classList.add('error');

                // set all error placeholder text content 
                const errorPlaceholder = document.querySelector(`${fieldName}-error`);
                errorPlaceholder.textContent = result.errors[fieldName].msg;

                // all placeholder visible
                errorPlaceholder.style.display = 'block';
            })
        } else {
            successToast.showToast();
            closeModal();
            document.querySelector("p.error").style.display = 'none';

            // reload page after one second
            setTimeout(() => {
                location.reload();
            }, 1000)
        }
    }
</script>